{"ast":null,"code":"var _jsxFileName = \"/Users/akhrortuyakov/Documents/Web/emoji/src/components/topbar/TopBar.jsx\",\n    _s = $RefreshSig$();\n\nimport './topBar.css';\nimport { Container, Navbar, Row, Form, FormControl, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport emojibook from '../../emojibook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TopBar() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"topbar\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Toggle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            className: \"navbarBrandName\",\n            href: \"/\",\n            children: \"EmojiBook \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"search\",\n              onChange: event => {\n                setSearchTerm(event.target.value);\n              },\n              placeholder: \"Search\",\n              className: \"mr-2 navbarSearch\",\n              \"aria-label\": \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"homeSearchResult\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: emojibook.filter(val => {\n                  if (searchTerm == \"\") {} else if (val.name.toLowerCase().includes(searchTerm.toLowerCase()) || val.emoji.toLowerCase().includes(searchTerm.toLowerCase())) {\n                    return val;\n                  }\n                }).map((val, key) => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"homeSearchResultItem\",\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      className: \"link\",\n                      to: `/detail/${val.id}`,\n                      children: [val.emoji, \" \", ' ', \" \", val.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 38\n                    }, this)\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 34\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopBar, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = TopBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBar\");","map":{"version":3,"sources":["/Users/akhrortuyakov/Documents/Web/emoji/src/components/topbar/TopBar.jsx"],"names":["Container","Navbar","Row","Form","FormControl","Button","useState","Link","emojibook","TopBar","searchTerm","setSearchTerm","event","target","value","filter","val","name","toLowerCase","includes","emoji","map","key","id"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAAQA,SAAR,EACIC,MADJ,EAEIC,GAFJ,EAGIC,IAHJ,EAIIC,WAJJ,EAKIC,MALJ,QAMO,iBANP;AAOA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BAEA,QAAC,MAAD;AAAA,6BACI,QAAC,SAAD;AAAA,gCAEI,QAAC,MAAD,CAAQ,MAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD,CAAQ,QAAR;AAAiB,UAAA,SAAS,EAAC,wBAA3B;AAAA,kCACA,QAAC,MAAD,CAAQ,KAAR;AAAc,YAAA,SAAS,EAAC,iBAAxB;AAA0C,YAAA,IAAI,EAAC,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA,oCAEA,QAAC,WAAD;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,QAAQ,EAAGM,KAAD,IAAS;AAACD,gBAAAA,aAAa,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AAAkC,eAF1D;AAGI,cAAA,WAAW,EAAC,QAHhB;AAII,cAAA,SAAS,EAAC,mBAJd;AAKI,4BAAW;AALf;AAAA;AAAA;AAAA;AAAA,oBAFA,eAYc;AAAK,cAAA,SAAS,EAAC,kBAAf;AAAA,qCACA;AAAA,0BACCN,SAAS,CAACO,MAAV,CAAkBC,GAAD,IAAO;AACrB,sBAAGN,UAAU,IAAE,EAAf,EAAkB,CACjB,CADD,MACO,IAAIM,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCT,UAAU,CAACQ,WAAX,EAAhC,KAA2DF,GAAG,CAACI,KAAJ,CAAUF,WAAV,GAAwBC,QAAxB,CAAiCT,UAAU,CAACQ,WAAX,EAAjC,CAA/D,EAA2H;AAChI,2BAAOF,GAAP;AACD;AACF,iBALF,EAKIK,GALJ,CAKQ,CAACL,GAAD,EAAKM,GAAL,KAAW;AAChB,sCACG;AAAc,oBAAA,SAAS,EAAC,sBAAxB;AAAA,2CACI,QAAC,IAAD;AAAM,sBAAA,SAAS,EAAC,MAAhB;AAAuB,sBAAA,EAAE,EAAG,WAAUN,GAAG,CAACO,EAAG,EAA7C;AAAA,iCACIP,GAAG,CAACI,KADR,OACgB,GADhB,OACuBJ,GAAG,CAACC,IAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBAASK,GAAT;AAAA;AAAA;AAAA;AAAA,0BADH;AAQC,iBAdJ;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAZd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD;;GAjDuBb,M;;KAAAA,M","sourcesContent":["import './topBar.css';\nimport {Container,\n    Navbar,\n    Row,\n    Form,\n    FormControl,\n    Button,\n} from 'react-bootstrap';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport emojibook from '../../emojibook';\n\nexport default function TopBar() {\n  const [searchTerm, setSearchTerm]=useState(\"\")\n  return (\n    <div className='topbar'> \n    \n    <Navbar>\n        <Container>\n            \n            <Navbar.Toggle />\n            <Navbar.Collapse className=\"justify-content-center\">\n            <Navbar.Brand className=\"navbarBrandName\" href=\"/\">EmojiBook </Navbar.Brand>\n            <Form className=\"d-flex\">\n          \n            <FormControl\n                type=\"search\"\n                onChange={(event)=>{setSearchTerm(event.target.value)}}\n                placeholder=\"Search\"\n                className=\"mr-2 navbarSearch\"\n                aria-label=\"Search\"\n            />\n            \n           \n            \n                          <div className=\"homeSearchResult\"> \n                          <ul>\n                          {emojibook.filter((val)=>{\n                              if(searchTerm==\"\"){\n                              } else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())||val.emoji.toLowerCase().includes(searchTerm.toLowerCase())) {\n                                return val\n                              }\n                            }).map((val,key)=>{\n                              return (\n                                 <li key={key} className=\"homeSearchResultItem\"> \n                                     <Link className=\"link\" to={`/detail/${val.id}`}>\n                                        {val.emoji} {' '} { val.name}\n                                      </Link>\n                                 </li>\n                                \n                                )\n                              })}\n                              </ul>\n                              </div>\n            \n             </Form>\n            </Navbar.Collapse>\n        </Container>\n    </Navbar>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}